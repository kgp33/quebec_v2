@startuml
class __init___py <<module>> << (M,orchid) >> #DarkSeaGreen {
}
class validator_py <<module>> << (M,orchid) >> #DarkSeaGreen {
    portfolio
    schema
    ---
    load_portfolio()
    load_schema()
    validate_portfolio()
}

validator_py --> json.load : uses
class __init___py <<module>> << (M,orchid) >> #DarkSeaGreen {
}
class price_py <<module>> << (M,orchid) >> #DarkSeaGreen {
    ---
    calculate_total_portfolio_value()
    calculate_value_sharpe()
    fetch_portfolio_sharpe_ratio()
    load_and_validate_portfolio()
}

price_py --> pd.DataFrame : uses
price_py --> yf.download : uses
class insecure_code_py <<module>> << (M,orchid) >> #DarkSeaGreen {
    temp_dir
    token
}
class conftest_py <<module>> << (M,orchid) >> #DarkSeaGreen {
}
class test_price_py <<module>> << (M,orchid) >> #DarkSeaGreen {
    ---
    price_data()
    test_calculate_total_portfolio_value()
    test_fetch_portfolio_sharpe_ratio()
}
class test_schema_hypothesis_py <<module>> << (M,orchid) >> #DarkSeaGreen {
    schema
    ---
    test_valid_invalid_portfolio()
    test_valid_portfolio()
    validate_portfolio()
}
class convert_safety_to_sarif_py <<module>> << (M,orchid) >> #DarkSeaGreen {
    requirements_file
    safety_json
    sarif_file
    ---
    convert_safety_to_sarif()
    find_files_for_package()
    find_import_line()
    generate_fingerprint()
    load_requirements()
}

convert_safety_to_sarif_py --> json.load : uses
class trigger_safety_py <<module>> << (M,orchid) >> #DarkSeaGreen {
}
center footer Generated by GitUml www.gituml.com
hide empty members

@enduml