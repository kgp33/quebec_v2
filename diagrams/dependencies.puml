@startuml
' Package diagram for the project structure

package "JSON_Validation" {
  class "Validator" {
    +load_portfolio(json_file)
    +load_schema(json_schema)
    +validate_portfolio(portfolio, schema)
    -portfolio
    -schema
  }
}

package "PriceApp" {
  class "Price" {
    +fetch_portfolio_sharpe_ratio(portfolio, price_data, total_investment, risk_free_rate)
    +load_and_validate_portfolio()
    +calculate_total_portfolio_value(portfolio, price_data, Date)
    +calculate_value_sharpe()
  }
}

package "Scripts" {
  class "ConvertSafetyToSarif" {
    +load_requirements(requirements_file)
    +find_files_for_package(package_name, source_dir)
    +find_import_line(file_path, package_name)
    +generate_fingerprint(uri, line)
    +convert_safety_to_sarif(safety_json, sarif_file, requirements_file)
  }
}

package "UnitTests" {
  class "TestPrice" {
    +price_data()
    +test_calculate_total_portfolio_value(price_data)
    +test_fetch_portfolio_sharpe_ratio(price_data)
  }

  class "TestSchemaHypothesis" {
    +validate_portfolio(portfolio, schema)
    +test_valid_portfolio(portfolio)
    +test_valid_invalid_portfolio(portfolio)
  }

  class "Conftest" {
    +setup_config()
  }
}

package "Schemas" {
  class "StockSchema" {
    +$schema
    +$id
    +title
    +items
  }
}

' Relationships

' JSON_Validation -> PriceApp
PriceApp.Price --> JSON_Validation.Validator : uses validate_portfolio, load_schema, load_portfolio

' PriceApp dependencies (Removed external libraries)
' PriceApp.Price --> yfinance : uses yf.download
' PriceApp.Price --> pandas : uses pd.DataFrame, pd.isnull
' PriceApp.Price --> datetime : uses datetime.today().strftime

' Scripts dependencies (Removed external libraries)
' Scripts.ConvertSafetyToSarif --> JSON_Validation.Validator : uses load_requirements
' Scripts.ConvertSafetyToSarif --> os : uses os
' Scripts.ConvertSafetyToSarif --> hashlib : uses hashlib
' Scripts.ConvertSafetyToSarif --> re : uses regex

' UnitTest dependencies
UnitTests.TestPrice --> PriceApp.Price : tests fetch_portfolio_sharpe_ratio, calculate_total_portfolio_value
UnitTests.TestSchemaHypothesis --> JSON_Validation.Validator : tests load_schema

' Other Relationships
Schemas.StockSchema --> JSON_Validation.Validator : referenced by load_schema

@enduml