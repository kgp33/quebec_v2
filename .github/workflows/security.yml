name: Security Scanning

on:
  push:
    branches: [ "main", "secure_coding_updates" ]
  pull_request:
    branches: [ "main", "secure_coding_updates" ]
  schedule:
    - cron: '26 22 * * 2'

jobs:
  security_scanning:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Bandit Scan
        uses: shundor/python-bandit-scan@9cc5aa4a006482b8a7f91134412df6772dbda22c
        with:
          exit_zero: true # exit with 0, even with results found
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information.

      # Install Safety
      - name: Install Safety
        run: |
          python -m pip install --upgrade pip
          python -m pip install safety

      # Create output directory
      - name: Create output directory
        run: |
          mkdir -p ./scan-results
          chmod -R 755 ./scan-results  # Set permissions to be writable

      # Run Safety Scan
      #- uses: pyupio/safety-action@v1
      #  name: Safety Scan
      #  id: safety_scan
      #  with:
      #    #api-key: 2ecceb26-6325-44b8-9597-8c2b18493a6d
      #    api-key: ${{ secrets.SAFETY_API_KEY }}

      # Save Safety output to file
      - name: Save Safety output to JSON file
        run: |
          safety scan --debug --json --api-key 2ecceb26-6325-44b8-9597-8c2b18493a6d --ouput json > ./scan-results/safety_output.json || echo "Safety scan failed"

      # Check the contents of the directory to verify the file is created
      - name: Verify the scan-results directory
        run: |
          ls -la ./scan-results

      # Convert and Upload Safety results to SARIF
      - name: Convert and Upload Safety results to SARIF
        if: success() # Ensure this step runs only if the previous steps succeed
        run: |
          echo "Converting safety_output.json to SARIF"
          python scripts/convert_safety_to_sarif.py ./scan-results/safety_output.json ./scan-results/safety_output.sarif
          echo "Conversion complete."

      # Upload the SARIF file
      - name: Upload Safety results to Code Scanning Alerts
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ./scan-results/safety_output.sarif
